create type visibility as enum (
    'PUBLIC',
    'PRIVATE' 
);

create table users(
    id int GENERATED BY DEFAULT AS IDENTITY NOT NULL, 
    name varchar not null,
    email varchar not null,
    nickname varchar,
    birth_date timestamp without time zone not null,
    cep varchar not null,
    password varchar not null,
    photo varchar
);
ALTER TABLE users ADD CONSTRAINT pk_users PRIMARY KEY (id);
ALTER TABLE users ADD CONSTRAINT uk_users_email UNIQUE (email);


create table post(
    id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    owner_id int,
    image varchar not null,
    message varchar not null,
    privacy visibility not null,
    crated_at timestamp without time zone
);
ALTER TABLE post ADD CONSTRAINT pk_post PRIMARY KEY (id);
ALTER TABLE post ADD CONSTRAINT fk_post_users_id FOREIGN KEY (id) REFERENCES users;

create table comment(
    comment_id int GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    message varchar not null,
    created_at timestamp without time zone not null,
    post_id int not null,
    author_id int not null
);
ALTER TABLE comment ADD CONSTRAINT pk_comment PRIMARY KEY (comment_id);
ALTER TABLE comment ADD CONSTRAINT fk_comment_post_id FOREIGN KEY (post_id) REFERENCES post;
ALTER TABLE comment ADD CONSTRAINT fk_comment_user_id FOREIGN KEY (author_id) REFERENCES users;


CREATE TABLE likes(
    like_id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    post_id INT NOT NULL,
    user_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL
);
ALTER TABLE likes ADD CONSTRAINT pk_like PRIMARY KEY (like_id);
ALTER TABLE likes ADD CONSTRAINT fk_like_post_id FOREIGN KEY (post_id) references post;
ALTER TABLE likes ADD CONSTRAINT fk_like_user_id FOREIGN KEY (user_id) references users;
ALTER TABLE likes ADD CONSTRAINT unique_post_user UNIQUE(post_id, user_id);
